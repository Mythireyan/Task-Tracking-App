{"version":3,"sources":["components/TaskForm.js","components/Task.js","components/TaskList.js","App.js","index.js"],"names":["TaskForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","className","onSubmit","e","preventDefault","id","Math","floor","random","text","edit","type","name","value","placeholder","onChange","target","ref","Task","tasks","completeTask","removeTask","editTask","setEdit","map","task","index","isComplete","onClick","TaskList","setTasks","test","newTasks","updatedTasks","removeArr","filter","taskId","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAuDeA,EArDE,SAACC,GACjB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,iBAAO,MAExBC,qBAAW,WACVF,EAASG,QAAQC,UAChB,IAYF,OACC,8BACC,sBAAMC,UAAU,YAAYC,SAZR,SAACC,GACrBA,EAAEC,iBAEFZ,EAAMU,SAAS,CACdG,GAAGC,KAAKC,MAAoB,IAAdD,KAAKE,UACnBC,KAAKf,IAENC,EAAS,KAKT,SACEH,EAAMkB,KACN,gCACC,uBAAOC,KAAK,OACTC,KAAK,OACLC,MAAOnB,EACPoB,YAAY,cACZb,UAAU,kBACVc,SAAU,SAACZ,GAAKR,EAASQ,EAAEa,OAAOH,QAClCI,IAAKrB,IAER,wBAAQK,UAAU,cAAlB,oBAGD,gCACC,uBAAOU,KAAK,OACTC,KAAK,OACLC,MAAOnB,EACPoB,YAAY,aACZb,UAAU,aACVc,SAAU,SAACZ,GAAKR,EAASQ,EAAEa,OAAOH,QAClCI,IAAKrB,IAER,wBAAQK,UAAU,cAAlB,8B,OCFSiB,EAxCH,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,MAAMC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,SAE7C,EAAwB7B,mBAAS,CAChCY,GAAG,KACHQ,MAAM,KAFP,mBAAOH,EAAP,KAAaa,EAAb,KAaA,OAAGb,EAAKL,GACA,cAAC,EAAD,CAAUK,KAAMA,EAAMR,SATX,SAAAW,GAClBS,EAASZ,EAAKL,GAAIQ,GAClBU,EAAQ,CACPlB,GAAG,KACHQ,MAAM,UAQDM,EAAMK,KAAI,SAACC,EAAKC,GAAN,OAChB,sBAAKzB,UAAWwB,EAAKE,WAAa,oBAAqB,WAAvD,UAGC,qBAAmBC,QAAS,kBAAIR,EAAaK,EAAKpB,KAAlD,SACEoB,EAAKhB,MADGgB,EAAKpB,IAGf,sBAAKJ,UAAU,QAAf,UACC,cAAC,IAAD,CACC2B,QAAS,kBAAIP,EAAWI,EAAKpB,KAC7BJ,UAAU,gBAEX,cAAC,IAAD,CACC2B,QAAS,kBAAIL,EAAQ,CAAClB,GAAGoB,EAAKpB,GAAKQ,MAAMY,EAAKhB,QAC9CR,UAAU,mBAZNyB,OCuBMG,EA5CE,WAChB,MAA0BpC,mBAAS,IAAnC,mBAAO0B,EAAP,KAAcW,EAAd,KAiCA,OACC,gCACC,wDACA,cAAC,EAAD,CAAU5B,SAlCI,SAACuB,GAChB,GAAIA,EAAKhB,OAAQ,QAAQsB,KAAKN,EAAKhB,MAAnC,CAGD,IAAMuB,EAAQ,CAAIP,GAAJ,mBAAaN,IAC3BW,EAASE,OA8BP,cAAC,EAAD,CAAMb,MAAOA,EAAOC,aAdD,SAACf,GACrB,IAAI4B,EAAed,EAAMK,KAAI,SAAAC,GAI5B,OAHGA,EAAKpB,KAAOA,IACdoB,EAAKE,YAAcF,EAAKE,YAElBF,KAERK,EAASG,IAOwCZ,WA3B/B,SAAChB,GACnB,IAAM6B,EAAY,YAAIf,GAAOgB,QAAO,SAAAV,GAAI,OAAEA,EAAKpB,KAAOA,KAEtDyB,EAASI,IAwBgEZ,SArBzD,SAACc,EAAQvB,GACrBA,EAAMJ,OAAQ,QAAQsB,KAAKlB,EAAMJ,OAGrCqB,GAAS,SAACO,GAAD,OAAQA,EAAKb,KAAI,SAAAc,GAAI,OAAKA,EAAKjC,KAAK+B,EAASvB,EAAQyB,eCdjDC,MARf,WACE,OACE,qBAAKtC,UAAU,MAAf,SACE,cAAC,EAAD,OCANuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a2fdeaa6.chunk.js","sourcesContent":["import React,{useState, useEffect, useRef} from 'react';\r\n\r\nconst TaskForm = (props)=>{\r\n\tconst [input, setInput] = useState('');\r\n\r\n\tconst inputRef = useRef(null)\r\n\r\n\tuseEffect (()=>{\r\n\t\tinputRef.current.focus();\r\n\t},[])\r\n\r\n \tconst handleSubmit = (e)=>{\r\n \t\te.preventDefault();\r\n\r\n \t\tprops.onSubmit({\r\n \t\t\tid:Math.floor(Math.random()*100000),\r\n \t\t\ttext:input\r\n \t\t})\r\n \t\tsetInput('');\r\n \t}\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<form className='task-form' onSubmit={handleSubmit}>\r\n\t\t\t\t{props.edit ?(\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input type='text'\r\n\t\t\t\t\t\t\t  name='text'\r\n\t\t\t\t\t\t\t  value={input}\r\n\t\t\t\t\t\t\t  placeholder='Edit a Task'\r\n\t\t\t\t\t\t\t  className='task-input edit'\r\n\t\t\t\t\t\t\t  onChange={(e)=>{setInput(e.target.value)}}\r\n\t\t\t\t\t\t\t  ref={inputRef} \t \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button className='task-button' >Add</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t):(\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input type='text'\r\n\t\t\t\t\t\t\t  name='text'\r\n\t\t\t\t\t\t\t  value={input}\r\n\t\t\t\t\t\t\t  placeholder='Add a Task'\r\n\t\t\t\t\t\t\t  className='task-input'\r\n\t\t\t\t\t\t\t  onChange={(e)=>{setInput(e.target.value)}}\r\n\t\t\t\t\t\t\t  ref={inputRef} \t \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button className='task-button' >Add Task</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t} \t  \t\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default TaskForm;","import React,{useState} from 'react';\r\nimport TaskForm from './TaskForm';\r\nimport {AiOutlineDelete,AiOutlineEdit} from 'react-icons/ai';\r\n\r\nconst Task =({tasks,completeTask, removeTask, editTask})=>{\r\n\r\n\tconst [edit, setEdit] = useState({\r\n\t\tid:null,\r\n\t\tvalue:''\r\n\t})\r\n\r\n\tconst submitEdit = value =>{\r\n\t\teditTask(edit.id, value);\r\n\t\tsetEdit({\r\n\t\t\tid:null,\r\n\t\t\tvalue:null\r\n\t\t});\r\n\t}\r\n\r\n\tif(edit.id){\r\n\t\treturn <TaskForm edit={edit} onSubmit={submitEdit}/>\r\n\t}\r\n\r\n\treturn tasks.map((task,index)=>(\r\n\t\t<div className={task.isComplete ? 'task-row complete': 'task-row'}\r\n\t\t\t key={index}\r\n\t\t>\r\n\t\t\t<div key={task.id} onClick={()=>completeTask(task.id)}>\r\n\t\t\t\t{task.text}\r\n\t\t\t</div>\r\n\t\t\t<div className='icons'>\r\n\t\t\t\t<AiOutlineDelete\r\n\t\t\t\t\tonClick={()=>removeTask(task.id)}\r\n\t\t\t\t\tclassName='delete-icon'\r\n\t\t\t\t/>\r\n\t\t\t\t<AiOutlineEdit\r\n\t\t\t\t\tonClick={()=>setEdit({id:task.id , value:task.text})}\r\n\t\t\t\t\tclassName='edit-icon'\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t))\r\n}\r\n\r\nexport default Task;","import React, {useState} from 'react';\r\nimport TaskForm from './TaskForm';\r\nimport Task from './Task';\r\n\r\nconst TaskList = ()=>{\r\n\tconst [tasks, setTasks] = useState([]);\r\n\r\n\tconst addTask = (task)=>{\r\n\t\tif(!task.text || /^\\s*$/.test(task.text)){\r\n\t\t\treturn ;\r\n\t\t}\r\n\tconst newTasks = [task, ...tasks]\r\n\tsetTasks(newTasks);\t\r\n\t}\r\n\r\n\tconst removeTask = (id)=>{\r\n\t\tconst removeArr = [...tasks].filter(task=>task.id !== id)\r\n\r\n\t\tsetTasks(removeArr)\r\n\t}\r\n\r\n\tconst editTask = (taskId, value)=>{\r\n\t\tif(!value.text || /^\\s*$/.test(value.text)){\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tsetTasks((prev)=>prev.map(item => (item.id===taskId ? value : item )))\r\n\t}\r\n\r\n\tconst completeTask = (id)=>{\r\n\t\tlet updatedTasks = tasks.map(task=>{\r\n\t\t\tif(task.id === id){\r\n\t\t\t\ttask.isComplete = !task.isComplete;\r\n\t\t\t}\r\n\t\t\treturn task;\r\n\t\t});\r\n\t\tsetTasks(updatedTasks);\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<h1>What's the Task Today?</h1>\r\n\t\t\t<TaskForm onSubmit={addTask}/>\r\n\t\t\t<Task tasks={tasks} completeTask={completeTask} removeTask={removeTask} editTask={editTask}/>\r\n\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default TaskList;","import './App.css';\nimport TaskList from './components/TaskList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TaskList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}